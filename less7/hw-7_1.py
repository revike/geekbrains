"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов
класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
	def __init__(self, m):
		self.m = m

	def __str__(self):
		m = ''
		for i in self.m:
			m += ''.join(str(i)) + '\n'
		m = ''.join(''.join(''.join(m.split(',')).split('[')).split(']'))

		return m


	def __add__(self, other):
		result = []
		res = []
		len_r = len(result)
		i = 0
		k = 0
		while i < len(self.m):
			if len_r < len(self.m[0]):
				res.append(self.m[i][k] + other.m[i][k])
				k += 1
				len_r += 1	
			else:
				i += 1
				k = 0
				len_r = 0
				result.extend(res)
				result.append(' ')
				res.clear()

		finish = ''
		for j in result:
			if j == ' ':
				finish += '\n'
			else:
				finish += str(j) + ' '

		return finish

m1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
m2 = [[9, 8, 7], [6, 5, 4], [3, 2, 1]]


print(Matrix(m1))
print(Matrix(m2))

print(Matrix(m1) + Matrix(m2))
