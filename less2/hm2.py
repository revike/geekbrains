'''
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

list_ = [1, 25.4, 'str', True, [1, 'ok'], {'key': 'value'}, (25, '16'), {'hi', 2}]
for res in list_:
    print(f'{res} => {type(res)}')
print('=====>')

'''
2. Для списка реализовать обмен значений соседних элементов,
т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().
'''

list_ = input('Введите элементы создаваемого списка через пробел: ')
res_list = list_.split()
print(f'\nВаш список:\n{res_list}')

if len(res_list) % 2 == 0:
    i = 0
    while i < len(res_list):
        a1 = res_list[i]
        a2 = res_list[i+1]
        res_list.pop(i)
        res_list.pop(i)
        res_list.insert(i, a1)
        res_list.insert(i, a2)
        i += 2
else:
    i = 0
    while i < len(res_list[:-1]):
        a1 = res_list[i]
        a2 = res_list[i + 1]
        res_list.pop(i)
        res_list.pop(i)
        res_list.insert(i, a1)
        res_list.insert(i, a2)
        i += 2
print(f'Резельтат:\n{res_list}')
print('=====>')

'''
3. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.
'''

month = int(input('Введите месяц года от 1 до 12: '))
data = {
    'Зима': [12, 1, 2],
    'Весна': [3, 4, 5],
    'Лето': [6, 7, 8],
    'Осень': [9, 10, 11],
}
for k, v in data.items():
    if month in v:
        print(k)
print('=====>')

'''
4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
Если в слово длинное, выводить только первые 10 букв в слове.
'''

user_str = input('Введите любое сообщение: ')
list_str = user_str.split()
res = dict(list(enumerate(list_str, 1)))

for k, v in res.items():
    print(f'{k} - {v[:10]}')

print('=====>')

'''
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
'''
print('\nВариант 1\n')

my_list = [7, 5, 3, 3, 2]
print(f"Результат: {', '.join(map(str, my_list))}.")
while True:
    rat = (input('\n"q" - Exit.\nВведите элемент рейтинга: '))
    if rat == 'q':
        break
    elif rat.find('-') != -1:
        pass
    else:
        my_list.append(int(rat))
        my_list.sort()
        my_list.reverse()
        print(f"Пользователь ввел число {rat}.\nРезультат: {', '.join(map(str, my_list))}.")

print('\nВариант 2\n')

my_list = [7, 5, 3, 3, 2]
print(f"Результат: {', '.join(map(str, my_list))}.")
while True:
    rat = (input('\n"q" - Exit.\nВведите элемент рейтинга: '))
    if rat == 'q':
        break
    elif int(rat) < 0:
        continue
    elif int(rat) not in my_list and int(rat) > my_list[0]:
        my_list.insert(0, int(rat))
    elif int(rat) not in my_list and int(rat) < my_list[-1]:
        my_list.append(int(rat))
    elif int(rat) not in my_list and int(rat) < my_list[0] and int(rat) > my_list[-1]:
        for i in my_list:
            if int(rat) > i:
                index = my_list.index(i)
                my_list.insert(index, int(rat))
                break
    elif int(rat) in my_list:
        index = my_list.index(int(rat))
        score = my_list.count(int(rat))
        my_list.insert(index + score, int(rat))

    print(f"Пользователь ввел число {rat}.\nРезультат: {', '.join(map(str, my_list))}.")

print('=====>')

'''
6. *Реализовать структуру данных «Товары».
Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах.
Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

welcome = input('Введите количество товаров,\
	которые необходимо добавить в базу данных: ')
bd = []
i = 1
while i <= int(welcome):
    title = input('Введите название ' + str(i) + ' товара: ')
    price = input('Введите цену товара "' + title + '": ')
    quantity = input('Введите количество товара "' + title + '": ')
    unit = input('Введите единицу измерения товара "' + title + '": ')
    product = (i, {
        'название': title, 'цена': int(price),
        'количество': int(quantity), 'ед': unit,
    })
    bd.append(product)
    i += 1

print(bd)
print('\nАналитика о товарах.\n')
list_title = []
list_price  = []
list_quantity = []
list_unit = []

for res in bd:
    list_title.append(res[1]['название'])
    list_price.append(res[1]['цена'])
    list_quantity.append(res[1]['количество'])
    if res[1]['ед'] not in list_unit:
        list_unit.append(res[1]['ед'])

result = {
    'название': list_title,
    'цена': list_price,
    'количество': list_quantity,
    'ед': list_unit,
}
print(result)

while True:
    print('Хотите вывести аналитику только названия, кол-ва или цены?')
    cont = input('"y" - yes\n"n" - no')
    if cont == "n":
        break
    elif cont == "y":
        poll = input('Введите:\n1 - "названия"\n2 - "цены"\n3 - "количество"')
        if poll == '1':
            print(f"\nНазвания -> {result['название']}\n")
        elif poll == '2':
            print(f"\nЦены -> {result['цена']}\n")
        elif poll == '3':
            print(f"\nКоличество -> {result['количество']}\n")
    else:
        break
